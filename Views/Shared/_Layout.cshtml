@{
    var title = ViewData["Title"] as string ?? "PicklePlay";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@title - PicklePlay</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" />
<style>
    /* Scrollable main content */
    main {
        flex-grow: 1;
        overflow-y: auto;
        max-height: calc(100vh - 140px); /* Adjust this value as needed */
    }
   
    /* Existing navbar styles */
    .navbar-custom {
        background-color: #a1d336 !important;
        min-height: 60px; /* Maintain navbar height */
    }
    
    /* Ensure navbar items stay aligned */
    .navbar-custom .navbar-brand {
        padding-top: 5px;
        padding-bottom: 5px;
    }
    
    /* New footer style */
    .bg-custom {
        background-color: #a1d336 !important;
    }

    .notification-text {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 240px;
        display: block;
    }
    
    .scrolling-text {
        display: inline-block;
        padding-left: 100%;
        animation: scrollText 10s linear infinite;
    }
    
    @@keyframes scrollText {
        0% { transform: translateX(0); }
        100% { transform: translateX(-100%); }
    }
    
    .notification-container {
        overflow: hidden;
        position: relative;
        width: 240px;
    }
body {
    background: url('/img/background1.jpg') no-repeat center center fixed;
    background-size: cover;
    min-height: 100vh;
}

</style>
</head>
<body>



    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-custom shadow-sm">
        <div class="container">
            <!-- Logo + Brand -->
<a class="navbar-brand d-flex align-items-center" href="/">
    <img src="~/img/logoV4.png" alt="Logo" width="50" height="45" class="me-2">
</a>
            <!-- Mobile Toggle -->
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#ppNav">
                <span class="navbar-toggler-icon"></span>
            </button>

<!-- Nav Links -->
<div class="collapse navbar-collapse" id="ppNav">
    <ul class="navbar-nav me-auto">
        <!-- Home Dropdown -->
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="homeDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Home
            </a>
            <ul class="dropdown-menu" aria-labelledby="homeDropdown">
                <li><a class="dropdown-item" asp-controller="Schedule" asp-action="Index">Game</a></li>
                <li><a class="dropdown-item nav-link" asp-controller="Competition" asp-action="Listing">Competition</a></li>
            </ul>
        </li>
        
        <!-- Community Link -->
        <li class="nav-item"><a class="nav-link" asp-controller="Community" asp-action="Index">Community</a></li>          
        <li class="nav-item"><a class="nav-link"asp-controller="Schedule" asp-action="MyGames">My Game</a></li>
        <li class="nav-item"><a class="nav-link" asp-controller="Chat" asp-action="Chat">Chat</a></li>
    </ul>
<!-- Notification Icon + Profile Dropdown -->
<div class="d-flex align-items-center">
    <!-- Inbox Notification Dropdown -->
    <div class="dropdown me-3">
        <a href="#" class="text-dark text-decoration-none position-relative dropdown-toggle" id="notificationDropdown" data-bs-toggle="dropdown" aria-expanded="false">
            <i class="bi bi-envelope fs-5"></i>
            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                4
                <span class="visually-hidden">unread messages</span>
            </span>
        </a>
        <ul class="dropdown-menu dropdown-menu-end shadow" aria-labelledby="notificationDropdown" style="width: 320px;">
            <li class="dropdown-header fw-bold">Notifications</li>
            
            <li><hr class="dropdown-divider my-1"></li>
            
            <li>
                <a class="dropdown-item d-flex py-2 notification-item" href="#">
                    <div class="flex-shrink-0 me-2 text-success">
                        <i class="bi bi-megaphone-fill"></i>
                    </div>
                    <div class="flex-grow-1 text-truncate position-relative overflow-hidden">
                        <div class="notification-text fw-semibold">TARUMT pickleball community announced a mini tournament!</div>
                        <small class="text-muted">Today, 10:30 AM</small>
                    </div>
                </a>
            </li>
            
            <li><hr class="dropdown-divider my-1"></li>
            
            <li>
                <a class="dropdown-item d-flex py-2 notification-item" href="#">
                    <div class="flex-shrink-0 me-2 text-primary">
                        <i class="bi bi-person-plus"></i>
                    </div>
                    <div class="flex-grow-1 text-truncate position-relative overflow-hidden">
                        <div class="notification-text fw-semibold">Jackee sent you a friend request</div>
                        <small class="text-muted">Yesterday, 3:45 PM</small>
                    </div>
                </a>
            </li>
            
            <li><hr class="dropdown-divider my-1"></li>
            
            <li>
                <a class="dropdown-item d-flex py-2 notification-item" href="#">
                    <div class="flex-shrink-0 me-2 text-warning">
                        <i class="bi bi-calendar-event"></i>
                    </div>
                    <div class="flex-grow-1 text-truncate position-relative overflow-hidden">
                        <div class="notification-text fw-semibold">Your "Monday Social Game" has ended, don't forget to endorse players</div>
                        <small class="text-muted">Monday, 8:15 PM</small>
                    </div>
                </a>
            </li>
            
            <li><hr class="dropdown-divider my-1"></li>
            
            <li>
                <a class="dropdown-item d-flex py-2 notification-item" href="#">
                    <div class="flex-shrink-0 me-2 text-info">
                        <i class="bi bi-share"></i>
                    </div>
                    <div class="flex-grow-1 text-truncate position-relative overflow-hidden">
                        <div class="notification-text fw-semibold">Green ladder club shared a game</div>
                        <small class="text-muted">Sunday, 2:20 PM</small>
                    </div>
                </a>
            </li>
            
            <li><hr class="dropdown-divider my-1"></li>
            
            <li class="text-center">
                <a class="dropdown-item small text-primary" href="#">View all notifications</a>
            </li>
        </ul>
    </div>

    <!-- Profile Dropdown -->
    <div class="dropdown">
        <a class="d-flex align-items-center text-dark text-decoration-none dropdown-toggle" href="#" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
            <img src="~/img/avatarQS.jpg" alt="Profile" width="32" height="32" class="rounded-circle me-2">
            <span>QS</span>
        </a>
        <ul class="dropdown-menu dropdown-menu-end shadow">
            <li><a class="dropdown-item" href="#">My Profile</a></li>
            <li><a class="dropdown-item" href="#">Settings</a></li>
            <li><hr class="dropdown-divider"></li>
            <li><a class="dropdown-item text-danger" href="#">Logout</a></li>
        </ul>
    </div>
</div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="container flex-grow-1 bg-white rounded shadow-sm p-4 mt-3 mb-5">

    @* --- ADD THIS BLOCK --- *@
            @if (TempData["SuccessMessage"] != null)
 {
     <div class="alert alert-success alert-dismissible fade show" role="alert" id="success-alert"> @* Ensure ID is present *@
         @TempData["SuccessMessage"]
         <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
     </div>
 }
            @if (TempData["ErrorMessage"] != null)
            {
                 <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @* --- END ADD --- *@
            
        @RenderBody()
    </main>

    <!-- Footer -->
    <footer class="bg-custom text-light mt-5 py-4">
        <div class="container text-center">
            <h6 class="fw-bold">🌍 World’s First Smart Pickleball Community Platform</h6>
            <p class="mb-1">Our mission is to connect players, enhance competition, and build strong communities through technology.</p>
            <div class="d-flex justify-content-center gap-4 mb-2">
                <a href="#" class="text-decoration-none text-light">About Us</a>
                <a href="#" class="text-decoration-none text-light">Mission & Vision</a>
                <a href="#" class="text-decoration-none text-light">Contact</a>
            </div>
            <small class="text-muted">&copy; 2025 PicklePlay. All rights reserved.</small>
        </div>
    </footer>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const notificationItems = document.querySelectorAll('.notification-item');
        
        notificationItems.forEach(item => {
            item.addEventListener('mouseenter', function() {
                const textElement = this.querySelector('.notification-text');
                const container = this.querySelector('.flex-grow-1');
                
                // Check if text is overflowing
                if (textElement.scrollWidth > container.offsetWidth) {
                    // Create a scrolling container
                    const scrollingContainer = document.createElement('div');
                    scrollingContainer.className = 'notification-container';
                    
                    // Create a scrolling text element
                    const scrollingText = document.createElement('div');
                    scrollingText.className = 'scrolling-text';
                    scrollingText.textContent = textElement.textContent;
                    
                    // Replace the original text with scrolling text
                    textElement.innerHTML = '';
                    textElement.appendChild(scrollingContainer);
                    scrollingContainer.appendChild(scrollingText);
                    
                    // Show full text without ellipsis
                    textElement.style.textOverflow = 'clip';
                }
            });
            
            item.addEventListener('mouseleave', function() {
                const textElement = this.querySelector('.notification-text');
                const originalText = textElement.querySelector('.scrolling-text')?.textContent;
                
                if (originalText) {
                    // Restore the original text with ellipsis
                    textElement.innerHTML = originalText;
                    textElement.style.textOverflow = 'ellipsis';
                }
            });
        });
    });
</script>
    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js"></script>

    @* --- ADD THIS SCRIPT BLOCK --- *@
    <script>
        // Wait for the document to be fully loaded
        document.addEventListener('DOMContentLoaded', (event) => {
            // Find the success alert by its ID (make sure you added id="success-alert" to the alert div)
            var successAlert = document.getElementById('success-alert');

            if (successAlert) {
                // Set a timeout to close the alert after 4000 milliseconds (4 seconds)
                setTimeout(() => {
                    // Use Bootstrap's Alert instance to close it smoothly
                    var alertInstance = bootstrap.Alert.getOrCreateInstance(successAlert);
                    alertInstance.close();
                }, 4000); // 4000 milliseconds = 4 seconds
            }
        });
    </script>
    @* --- END ADDED SCRIPT BLOCK --- *@
    @RenderSection("Scripts", required: false)
</body>
</html>