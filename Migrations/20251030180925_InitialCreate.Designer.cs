// <auto-generated />
using System;
using FYP_QS_CODE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FYP_QS_CODE.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251030180925_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FYP_QS_CODE.Models.Competition", b =>
                {
                    b.Property<int>("ScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("schedule_id");

                    b.Property<bool>("DoublePool")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("doublePool");

                    b.Property<int>("Draw")
                        .HasColumnType("int")
                        .HasColumnName("draw");

                    b.Property<byte>("Format")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("format");

                    b.Property<string>("MatchRule")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("matchRule");

                    b.Property<int>("NumPool")
                        .HasColumnType("int")
                        .HasColumnName("numPool");

                    b.Property<int>("StandardLoss")
                        .HasColumnType("int")
                        .HasColumnName("standardLoss");

                    b.Property<int>("StandardWin")
                        .HasColumnType("int")
                        .HasColumnName("standardWin");

                    b.Property<byte>("StandingCalculation")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("standingCalculation");

                    b.Property<bool>("ThirdPlaceMatch")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("thirdPlaceMatch");

                    b.Property<int>("TieBreakLoss")
                        .HasColumnType("int")
                        .HasColumnName("tieBreakLoss");

                    b.Property<int>("TieBreakWin")
                        .HasColumnType("int")
                        .HasColumnName("tieBreakWin");

                    b.Property<int>("WinnersPerPool")
                        .HasColumnType("int")
                        .HasColumnName("winnersPerPool");

                    b.HasKey("ScheduleId");

                    b.ToTable("competition");
                });

            modelBuilder.Entity("FYP_QS_CODE.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("schedule_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int?>("AgeGroupRestriction")
                        .HasColumnType("int")
                        .HasColumnName("ageGroupRestriction");

                    b.Property<DateTime?>("ApproxStartTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("approxStartTime");

                    b.Property<int?>("AutoCreateWhen")
                        .HasColumnType("int")
                        .HasColumnName("autoCreateWhen");

                    b.Property<int?>("CancellationFreeze")
                        .HasColumnType("int")
                        .HasColumnName("cancellationfreeze");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<DateTime?>("EarlyBirdClose")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("earlyBirdClose");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("endTime");

                    b.Property<int?>("EventTag")
                        .HasColumnType("int")
                        .HasColumnName("event_tag");

                    b.Property<decimal?>("FeeAmount")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("feeAmount");

                    b.Property<int?>("FeeType")
                        .HasColumnType("int")
                        .HasColumnName("feeType");

                    b.Property<int?>("GameFeature")
                        .HasColumnType("int")
                        .HasColumnName("gameFeature");

                    b.Property<string>("GameName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("gameName");

                    b.Property<int?>("GenderRestriction")
                        .HasColumnType("int")
                        .HasColumnName("genderRestriction");

                    b.Property<int?>("HostRole")
                        .HasColumnType("int")
                        .HasColumnName("hostrole");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("location");

                    b.Property<decimal?>("MaxRankRestriction")
                        .HasColumnType("decimal(5,4)")
                        .HasColumnName("maxRankRestriction");

                    b.Property<decimal?>("MinRankRestriction")
                        .HasColumnType("decimal(5,4)")
                        .HasColumnName("minRankRestriction");

                    b.Property<int?>("NumPlayer")
                        .HasColumnType("int")
                        .HasColumnName("num_player");

                    b.Property<int?>("NumTeam")
                        .HasColumnType("int")
                        .HasColumnName("num_team");

                    b.Property<int?>("ParentScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("parentScheduleId");

                    b.Property<int?>("Privacy")
                        .HasColumnType("int")
                        .HasColumnName("privacy");

                    b.Property<DateTime?>("RecurringEndDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("recurringEndDate");

                    b.Property<int?>("RecurringWeek")
                        .HasColumnType("int")
                        .HasColumnName("recurringWeek");

                    b.Property<DateTime?>("RegClose")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("regClose");

                    b.Property<DateTime?>("RegOpen")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("regOpen");

                    b.Property<int?>("Repeat")
                        .HasColumnType("int")
                        .HasColumnName("repeat");

                    b.Property<int?>("ScheduleType")
                        .HasColumnType("int")
                        .HasColumnName("schedule_type");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("startTime");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("ScheduleId");

                    b.ToTable("schedule");
                });

            modelBuilder.Entity("FYP_QS_CODE.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<string>("Bio")
                        .HasColumnType("text")
                        .HasColumnName("bio");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("dateOfBirth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("EmailVerificationToken")
                        .HasColumnType("longtext")
                        .HasColumnName("email_verification_token");

                    b.Property<DateTime?>("EmailVerifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("email_verified_at");

                    b.Property<bool>("EmailVerify")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("emailVerify");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("gender");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("PasswordResetTokenExpiry")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phoneNo");

                    b.Property<string>("ProfilePicture")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("profile_picture");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("role");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.Property<DateTime?>("VerificationTokenExpiry")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("verification_token_expiry");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("FYP_QS_CODE.Models.Competition", b =>
                {
                    b.HasOne("FYP_QS_CODE.Models.Schedule", "Schedule")
                        .WithOne("Competition")
                        .HasForeignKey("FYP_QS_CODE.Models.Competition", "ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("FYP_QS_CODE.Models.Schedule", b =>
                {
                    b.Navigation("Competition");
                });
#pragma warning restore 612, 618
        }
    }
}
